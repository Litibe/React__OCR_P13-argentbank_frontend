swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '401':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/Profile'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/Profile'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /accounts/:
    get:
      security:
        - Bearer: []
      tags:
        - Account Module
      summary: Obtains list of Accounts by UserId
      description: API for Account
      produces:
        - application/json
      responses:
        '200':
          description: Get List of Accounts Successfully
          schema:
            $ref: '#/definitions/Accounts'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
  /accounts/<int:id_account>/transactions/:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Obtains list of last twenty Transactions for Account
      description: API for Transactions
      produces:
        - application/json
      responses:
        '200':
          description: Get List of last twenty Transactions for Account Successfully
          schema:
            $ref: '#/definitions/Transactions'
        '401':
          description: Unauthorized
        '404':
          description: Account Not Found 
        '500':
          description: Internal Server Error
  /accounts/<int:id_account>/transactions/<date:%Y-%m>/:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Obtains list of Transactions with year and month selected for Account
      description: API for Transactions
      produces:
        - application/json
      responses:
        '200':
          description: Get List of Transactions for Account Successfully
          schema:
            $ref: '#/definitions/Transactions'
        '401':
          description: Unauthorized
        '404':
          description: Account Not Found 
        '500':
          description: Internal Server Error
  /accounts/<int:id_account>/transactions/<int:id_transaction>/:
    put:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Edit Transaction of Account
      description: API for Transactions
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body with notes
          description: Edit only Notes of transaction
          required: true
          schema:
            $ref: '#/definitions/PutTransactionOnlyNotes'
        - in: body
          name: body with category
          description: Edit only Category of transactions
          required: true
          schema:
            $ref: '#/definitions/PutTransactionOnlyCategory'
        - in: body
          name: body with category and notes
          description: Edit category and notes of transaction
          required: true
          schema:
            $ref: '#/definitions/PutTransaction'
      produces:
        - application/json
      responses:
        '202':
          description: Get List of Transactions for Account Successfully
          schema:
            $ref: '#/definitions/Transactions'
        '401':
          description: Unauthorized
        '404':
          description: Account or/and Transaction Not Found 
        '500':
          description: Internal Server Error
    delete:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Delete notes and category Transaction of Account
      description: API for Transactions
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '202':
          description: Get List of Transactions for Account Successfully
          schema:
            $ref: '#/definitions/Transactions'
        '401':
          description: Unauthorized
        '404':
          description: Account or/and Transaction Not Found 
        '500':
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  Profile:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          email:
            type: string
          firstName:
            type: string
          lastName:
            type: string
          createdAt:
            type: string
          updatedAt:
            type: string
          id:
            type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
  Accounts:
    type: array
    items:
      type: object
      properties:
        id: 
          type: integer
        name: 
          type: string
          maximum: 200
        balance: 
          type: number
          format: float
        createdAt:
          type: string
          format: date
        updatedAt: 
          type: string
          format: date
        user: 
          type: string
  Transactions:
    type: array
    items:
      type: object
      properties:
        id: 
          type: integer
        date: 
          type: string
          format: date
        description: 
          type: string
          maximum: 200
        amount: 
          type: number
          format: float
        balance:
          type: number
          format: float
        transactionType:
          type: string
        category:
          type: string
        notes:
          type: string
        account: 
          type: integer
  PutTransaction:
    type: object
    properties:
      category: 
        type: string
      notes:
        type: string
  PutTransactionOnlyCategory:
    type: object
    properties:
      category: 
        type: string
  PutTransactionOnlyNotes:
    type: object
    properties:
      notes: 
        type: string
    

